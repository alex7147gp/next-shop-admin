[{"/opt/lampp/htdocs/react/next-shop-admin/src/common/Chart.js":"1","/opt/lampp/htdocs/react/next-shop-admin/src/common/Loading.jsx":"2","/opt/lampp/htdocs/react/next-shop-admin/src/common/Modal.jsx":"3","/opt/lampp/htdocs/react/next-shop-admin/src/common/Nav.jsx":"4","/opt/lampp/htdocs/react/next-shop-admin/src/components/Header.jsx":"5","/opt/lampp/htdocs/react/next-shop-admin/src/components/LoginPages.jsx":"6","/opt/lampp/htdocs/react/next-shop-admin/src/components/alert.jsx":"7","/opt/lampp/htdocs/react/next-shop-admin/src/components/fromProduct.jsx":"8","/opt/lampp/htdocs/react/next-shop-admin/src/components/pagination.jsx":"9","/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useAlert.js":"10","/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useAuth.js":"11","/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useFetch.js":"12","/opt/lampp/htdocs/react/next-shop-admin/src/layout/MainLayout.js":"13","/opt/lampp/htdocs/react/next-shop-admin/src/pages/_app.js":"14","/opt/lampp/htdocs/react/next-shop-admin/src/pages/api/hello.js":"15","/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/edit/[id].js":"16","/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/index.js":"17","/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/products.js":"18","/opt/lampp/htdocs/react/next-shop-admin/src/pages/index.js":"19","/opt/lampp/htdocs/react/next-shop-admin/src/pages/login.js":"20","/opt/lampp/htdocs/react/next-shop-admin/src/services/api/index.js":"21","/opt/lampp/htdocs/react/next-shop-admin/src/services/api/product.js":"22"},{"size":589,"mtime":1666042316012,"results":"23","hashOfConfig":"24"},{"size":621,"mtime":1666042079904,"results":"25","hashOfConfig":"24"},{"size":2168,"mtime":1666040392496,"results":"26","hashOfConfig":"24"},{"size":380,"mtime":1664829630082,"results":"27","hashOfConfig":"24"},{"size":7183,"mtime":1666042209105,"results":"28","hashOfConfig":"24"},{"size":4061,"mtime":1666560217871,"results":"29","hashOfConfig":"24"},{"size":844,"mtime":1666040437881,"results":"30","hashOfConfig":"24"},{"size":6284,"mtime":1666040351690,"results":"31","hashOfConfig":"24"},{"size":4268,"mtime":1666731801286,"results":"32","hashOfConfig":"24"},{"size":406,"mtime":1666040369561,"results":"33","hashOfConfig":"24"},{"size":1282,"mtime":1666040855451,"results":"34","hashOfConfig":"24"},{"size":421,"mtime":1666040898993,"results":"35","hashOfConfig":"24"},{"size":354,"mtime":1666040913652,"results":"36","hashOfConfig":"24"},{"size":348,"mtime":1666645846509,"results":"37","hashOfConfig":"24"},{"size":171,"mtime":1666040934687,"results":"38","hashOfConfig":"24"},{"size":855,"mtime":1666040955154,"results":"39","hashOfConfig":"24"},{"size":4865,"mtime":1666041161229,"results":"40","hashOfConfig":"24"},{"size":6866,"mtime":1666041657151,"results":"41","hashOfConfig":"24"},{"size":6816,"mtime":1666817977185,"results":"42","hashOfConfig":"24"},{"size":109,"mtime":1666042236354,"results":"43","hashOfConfig":"24"},{"size":1374,"mtime":1665867834010,"results":"44","hashOfConfig":"24"},{"size":790,"mtime":1666041852490,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y4n46f",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/htdocs/react/next-shop-admin/src/common/Chart.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/common/Loading.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/common/Modal.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/common/Nav.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/components/Header.jsx",["118","119","120"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react';\nimport { useAuth } from '@hooks/useAuth';\nimport { Disclosure, Menu, Transition } from '@headlessui/react';\nimport { BellIcon, Bars3Icon, XMarkIcon } from '@heroicons/react/20/solid';\n\nconst navigation = [\n  { name: 'Dashboard', href: '#', current: true },\n  { name: 'Productos', href: '/dashboard/products/', current: false },\n  { name: 'Ventas', href: '#', current: false },\n];\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport default function Header() {\n  const auth = useAuth();\n  const userData = {\n    name: auth?.user?.name,\n    email: auth?.user?.email,\n    imageUrl: auth?.user?.avatar,\n  };\n  return (\n    <>\n      <Disclosure as=\"nav\" className=\"bg-gray-800\">\n        {({ open }) => (\n          <>\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"flex items-center justify-between h-16\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <img className=\"h-8 w-8\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\" alt=\"Workflow\" />\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <div className=\"ml-10 flex items-baseline space-x-4\">\n                      {navigation.map((item) => (\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white', 'px-3 py-2 rounded-md text-sm font-medium')}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"hidden md:block\">\n                  <div className=\"ml-4 flex items-center md:ml-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n\n                    {/* Profile dropdown */}\n                    <Menu as=\"div\" className=\"ml-3 relative\">\n                      <div>\n                        <Menu.Button className=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                          <span className=\"sr-only\">Open user menu</span>\n                          <img className=\"h-8 w-8 rounded-full\" src={userData.imageUrl} alt=\"\" />\n                        </Menu.Button>\n                      </div>\n                      <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                      >\n                        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                          <button onClick={() => auth.logout()} className=\"block px-4 py-2 text-sm text-gray-700\">\n                            Logout\n                          </button>\n                        </Menu.Items>\n                      </Transition>\n                    </Menu>\n                  </div>\n                </div>\n                <div className=\"-mr-2 flex md:hidden\">\n                  {/* Mobile menu button */}\n                  <Disclosure.Button className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                    <span className=\"sr-only\">Open main menu</span>\n                    {open ? <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" /> : <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />}\n                  </Disclosure.Button>\n                </div>\n              </div>\n            </div>\n\n            <Disclosure.Panel className=\"md:hidden\">\n              <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n                {navigation.map((item) => (\n                  <Disclosure.Button\n                    key={item.name}\n                    as=\"a\"\n                    href={item.href}\n                    className={classNames(item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white', 'block px-3 py-2 rounded-md text-base font-medium')}\n                    aria-current={item.current ? 'page' : undefined}\n                  >\n                    {item.name}\n                  </Disclosure.Button>\n                ))}\n              </div>\n              <div className=\"pt-4 pb-3 border-t border-gray-700\">\n                <div className=\"flex items-center px-5\">\n                  <div className=\"flex-shrink-0\">\n                    <img className=\"h-10 w-10 rounded-full\" src={userData.imageUrl} alt=\"\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <div className=\"text-base font-medium leading-none text-white\">{userData.name}</div>\n                    <div className=\"text-sm font-medium leading-none text-gray-400\">{userData.email}</div>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"ml-auto bg-gray-800 flex-shrink-0 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                  >\n                    <span className=\"sr-only\">View notifications</span>\n                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n                <div className=\"mt-3 px-2 space-y-1\">\n                  {userNavigation.map((item) => (\n                    <Disclosure.Button key={item.name} as=\"a\" href={item.href} className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\">\n                      {item.name}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n              </div>\n            </Disclosure.Panel>\n          </>\n        )}\n      </Disclosure>\n    </>\n  );\n}\n","/opt/lampp/htdocs/react/next-shop-admin/src/components/LoginPages.jsx",["121"],[],"import React, { useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { LockClosedIcon } from '@heroicons/react/20/solid';\nimport { useAuth } from '@hooks/useAuth';\n\nexport default function LoginPage() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const auth = useAuth();\n  const router = useRouter();\n\n  const [errors, setErrors] = useState(false);\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    auth\n      .signIn(email, password)\n      .then(() => {\n        router.push('/dashboard');\n      })\n      .catch((error) => {\n        console.log('You have error ' + error);\n        setErrors(true);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img className=\"mx-auto h-12 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\" alt=\"Workflow\" />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n          </div>\n          <form className=\"mt-8 space-y-6\" onSubmit={submitHandler}>\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                  ref={emailRef}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                  ref={passwordRef}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\" />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n            </div>\n            {errors && <span>Datos incorectos</span>}\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n","/opt/lampp/htdocs/react/next-shop-admin/src/components/alert.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/components/fromProduct.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/components/pagination.jsx",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useAlert.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useAuth.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/hooks/useFetch.js",["122"],[],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (endpoint) => {\n  const [data, setData] = useState([]);\n\n  async function fetchData() {\n    const response = await axios.get(endpoint);\n    setData(response.data);\n  }\n\n  useEffect(() => {\n    try {\n      fetchData();\n    } catch (err) {\n      console.log(err);\n    }\n  }, [endpoint]);\n\n  return data;\n};\n\nexport default useFetch;\n","/opt/lampp/htdocs/react/next-shop-admin/src/layout/MainLayout.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/pages/_app.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/pages/api/hello.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/edit/[id].js",["123"],[],"import React, { useState, useEffect } from 'react';\nimport FromProduct from '@components/fromProduct';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport endPoints from '@services/api';\n\nexport default function Edit() {\n  const [product, setProduct] = useState({});\n  const [notId, setNotId] = useState(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    const { id } = router.query;\n    if (!router.isReady) return;\n    async function getProducts() {\n      try {\n        const response = await axios.get(endPoints.product.getProduct(id));\n        setProduct(response.data);\n        setNotId(false);\n      } catch (err) {\n        console.log(err);\n        setNotId(true);\n      }\n    }\n    getProducts();\n  }, [router?.isReady]);\n\n  return notId ? <h1>Page not Fount, check id</h1> : <FromProduct product={product} />;\n}\n","/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/index.js",["124"],[],"const people = [\n  {\n    title: 'Jane Cooper',\n    category: {\n      name: 'Regional Paradigm Technician',\n      id: 'Optimization',\n    },\n    price: 'Admin',\n    id: 'jane.cooper@example.com',\n    images: [\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60',\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60',\n    ],\n  },\n];\n\nimport React, { useState } from 'react';\nimport useFetch from '@hooks/useFetch';\nimport endPoints from '@services/api';\nimport { CharT } from '@common/Chart';\nimport Pagination from '@components/pagination';\n\nexport default function Dashboard() {\n  const [offset, setOffset] = useState(0);\n\n  const PRODUCT_LIMIT = 5;\n  const PRODUCT_OFFSET = offset;\n  const PRODUCT_FULL = useFetch(endPoints.product.getProducts(0, 0));\n  const products = useFetch(endPoints.product.getProducts(PRODUCT_LIMIT, PRODUCT_OFFSET));\n  const categoryName = products?.map((product) => product.category);\n  const categoryCount = categoryName?.map((category) => category.name);\n  const countOcurrences = (arr) => arr.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1), prev), {});\n  const PRODUCT_FUUL = PRODUCT_FULL.length;\n\n  const data = {\n    datasets: [\n      {\n        label: 'Categories',\n        data: countOcurrences(categoryCount),\n        borderWidth: 2,\n        backgroundColor: ['#ffbb11', '#c0c0c0', '#50AF95', 'f3ba2f', '#2a71d0'],\n      },\n    ],\n  };\n\n  return (\n    <>\n      <CharT className=\"mb-8 mt-2\" chartData={data} />\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Name\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Title\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Role\n                    </th>\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\n                      <span className=\"sr-only\">Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {(products.lenght == 0 ? people : products).map((product) => (\n                    <tr key={`Product-item-${product.id}`}>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <img className=\"h-10 w-10 rounded-full\" src={product.images[0]} alt=\"\" />\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{product.title}</div>\n                            <div className=\"text-sm text-gray-500\">{product.id}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{product.category.name}</div>\n                        <div className=\"text-sm text-gray-500\">{product.category.id}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">Active</span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{product.price}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <Pagination offset={offset} setOffset={setOffset} PRODUCT_FUUL={PRODUCT_FUUL} PRODUCT_LIMIT={PRODUCT_LIMIT} PRODUCT_OFFSET={PRODUCT_OFFSET} neighbours={2} />\n      </div>\n    </>\n  );\n}\n","/opt/lampp/htdocs/react/next-shop-admin/src/pages/dashboard/products.js",["125"],[],"const people = [\n  {\n    title: 'Jane Cooper',\n    category: {\n      name: 'Regional Paradigm Technician',\n      id: 'Optimization',\n    },\n    price: 'Admin',\n    id: 'jane.cooper@example.com',\n    images: [\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60',\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60',\n    ],\n  },\n];\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport endPoints from '@services/api';\nimport { Fragment } from 'react';\nimport { CheckIcon, XCircleIcon } from '@heroicons/react/20/solid';\nimport Modal from '@common/Modal';\nimport FromProduct from '@components/fromProduct';\nimport useAlert from '@hooks/useAlert';\nimport Alert from '@components/alert';\nimport { deleteProducts } from '@services/api/product';\nimport Link from 'next/link';\n\nexport default function Products() {\n  const [open, setOpen] = useState(false);\n  const [products, setProducts] = useState([]);\n  const { alert, setAlert, toggleAlert } = useAlert();\n  const productsN = products.length;\n\n  useEffect(() => {\n    async function getProducts() {\n      const response = await axios.get(endPoints.product.products);\n      setProducts(response.data);\n    }\n    try {\n      getProducts();\n    } catch (err) {\n      console.log(err);\n    }\n  }, [alert]);\n\n  const handleDelete = (id) => {\n    deleteProducts(id)\n      .then(() => {\n        setAlert({\n          active: true,\n          message: 'Delete product successfully',\n          type: 'success',\n          autoClose: false,\n        });\n      })\n      .catch((error) => {\n        setAlert({\n          active: true,\n          message: error.message,\n          type: 'error',\n          autoClose: 'false',\n        });\n      });\n  };\n\n  return (\n    <>\n      <Alert alert={alert} handleClose={toggleAlert} />\n      <div className=\"lg:flex lg:items-center lg:justify-between mb-8\">\n        <div className=\"min-w-0 flex-1\">\n          <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight\">List of Products</h2>\n        </div>\n        <div className=\"mt-5 flex lg:mt-0 lg:ml-4\">\n          <span className=\"sm:ml-3\">\n            <button\n              type=\"button\"\n              className=\"inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              <CheckIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n              Add Product\n            </button>\n          </span>\n        </div>\n      </div>\n      <span>Products {productsN}</span>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Name\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Title\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Role\n                    </th>\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\n                      <span className=\"sr-only\">Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {(products.lenght == 0 ? people : products).map((product) => (\n                    <tr key={`Product-item-${product.id}`}>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <img className=\"h-10 w-10 rounded-full\" src={product.images[0]} alt=\"\" />\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{product.title}</div>\n                            <div className=\"text-sm text-gray-500\">{product.id}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{product.category.name}</div>\n                        <div className=\"text-sm text-gray-500\">{product.category.id}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">Active</span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{product.price}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                        <Link href={`/dashboard/edit/${product.id}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                          Edit\n                        </Link>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-ms font-medium\">\n                        <XCircleIcon\n                          className=\"flex-shrink-0 h-6 w-6 text-right text-sm font-medium\"\n                          aria-hidden=\"true\"\n                          onClick={() => {\n                            handleDelete(product.id);\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal open={open} setOpen={setOpen}>\n        <FromProduct setAlert={setAlert} setOpen={setOpen} />\n      </Modal>\n    </>\n  );\n}\n","/opt/lampp/htdocs/react/next-shop-admin/src/pages/index.js",["126","127","128"],[],"/opt/lampp/htdocs/react/next-shop-admin/src/pages/login.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/services/api/index.js",[],[],"/opt/lampp/htdocs/react/next-shop-admin/src/services/api/product.js",[],[],{"ruleId":"129","severity":1,"message":"130","line":37,"column":21,"nodeType":"131","endLine":37,"endColumn":131},{"ruleId":"129","severity":1,"message":"130","line":69,"column":27,"nodeType":"131","endLine":69,"endColumn":98},{"ruleId":"129","severity":1,"message":"130","line":117,"column":21,"nodeType":"131","endLine":117,"endColumn":94},{"ruleId":"129","severity":1,"message":"130","line":33,"column":13,"nodeType":"131","endLine":33,"endColumn":135},{"ruleId":"132","severity":1,"message":"133","line":18,"column":6,"nodeType":"134","endLine":18,"endColumn":16,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":26,"column":6,"nodeType":"134","endLine":26,"endColumn":23,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"130","line":79,"column":29,"nodeType":"131","endLine":79,"endColumn":102},{"ruleId":"129","severity":1,"message":"130","line":120,"column":29,"nodeType":"131","endLine":120,"endColumn":102},{"ruleId":"129","severity":1,"message":"130","line":35,"column":21,"nodeType":"131","endLine":35,"endColumn":149},{"ruleId":"129","severity":1,"message":"130","line":69,"column":23,"nodeType":"131","endLine":69,"endColumn":131},{"ruleId":"129","severity":1,"message":"130","line":121,"column":9,"nodeType":"131","endLine":125,"endColumn":11},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'router.query'. Either include it or remove the dependency array.",["139"],{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [endpoint, fetchData]",{"range":"144","text":"145"},"Update the dependencies array to be: [router.isReady, router.query]",{"range":"146","text":"147"},[363,373],"[endpoint, fetchData]",[744,761],"[router.isReady, router.query]"]